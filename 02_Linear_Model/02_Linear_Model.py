# -*- coding: utf-8 -*-
"""PyTorchZeroToAll - Lecture 02: Linear Model

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-snBhIVq68IIPHewk6a4Tds2Y58TZhyr

# Lecture 02: Linear Model
"""

import numpy as np
import matplotlib.pyplot as plt

"""## Model & Loss"""

x_data = [1.0, 2.0, 3.0]
y_data = [2.0, 4.0, 6.0]

w = 1.0 # a random guess: random value

# our model for the forward pass
def forward(x):
    return x*w

# Loss function
def loss(x, y):
    y_pred = forward(x)
    return (y_pred - y) * (y_pred - y)

w_list = []
mse_list = []

for w in np.arange(0.0, 4.1, 0.1):
    print("w =", w)
    w_list.append(w)

    l_sum = 0 # sum of the loss
    for x_val, y_val in zip(x_data, y_data):
        y_pred_val = forward(x_val)
        l = loss(x_val, y_val)
        l_sum += l
        print("\t", x_val, y_val, y_pred_val, l)
    print("MSE =", l_sum/3)
    mse_list.append(l_sum/3)

plt.plot(w_list, mse_list)
plt.ylabel("Loss")
plt.xlabel("Weight")
plt.show()

